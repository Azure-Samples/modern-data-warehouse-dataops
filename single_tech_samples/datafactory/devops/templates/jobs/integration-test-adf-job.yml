---
parameters:
  - name: environmentName
    type: string
  - name: serviceConnection
    type: string
  - name: resourceGroup
    type: string
  - name: datafactoryName
    type: string
  - name: accountName
    type: string
  - name: accountKey
    type: string

jobs:
- job: 'Integration_Test'
  displayName: 'Integration E2E Test'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python37:
        python.version: '3.7'

  steps:
  # Get the service principal information from the service connection
  - task: AzureCLI@2
    name: exported_azure_credentials
    displayName: 'Export Azure Credentials'
    inputs:
      azureSubscription: ${{ parameters.serviceConnection }}
      scriptType: pscore
      scriptLocation: inlineScript
      addSpnToEnvironment: true
      inlineScript: |
          Write-Host "##vso[task.setvariable variable=AZ_SERVICE_PRINCIPAL_TENANT_ID]$env:tenantId"
          Write-Host "##vso[task.setvariable variable=AZ_SERVICE_PRINCIPAL_ID]$env:servicePrincipalId"
          Write-Host "##vso[task.setvariable variable=AZ_SERVICE_PRINCIPAL_SECRET]$env:servicePrincipalKey"
          Write-Host $env:tenantId
          Write-Host $env:servicePrincipalId
          Write-Host $env:servicePrincipalKey
          $id = convertfrom-json (az account list --query "[?isDefault].id | [0]")
          Write-Host $id
          Write-Host "##vso[task.setvariable variable=AZ_SUBSCRIPTION_ID]$id"
  
  # Set the python environment and install needed libs
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
    workingDirectory: 'single_tech_samples/datafactory/tests/integrationtests/'

  # Run pytest test cases
  - script: |
      pytest tests/test_pipeline_ingest_to_bronze.py -s --doctest-modules --junitxml=test_adf_ingest.xml
    workingDirectory: 'single_tech_samples/datafactory/tests/integrationtests/'
    env:
      AZ_SERVICE_PRINCIPAL_ID: $AZ_SERVICE_PRINCIPAL_ID
      AZ_SERVICE_PRINCIPAL_SECRET: $AZ_SERVICE_PRINCIPAL_SECRET
      AZ_SERVICE_PRINCIPAL_TENANT_ID: $AZ_SERVICE_PRINCIPAL_TENANT_ID
      AZ_SUBSCRIPTION_ID: $AZ_SUBSCRIPTION_ID

      AZ_RESOURCE_GROUP_NAME: ${{ parameters.resourceGroup }}
      AZ_DATAFACTORY_NAME: ${{ parameters.datafactoryName }}

      AZ_STORAGE_ACCOUNT_NAME: ${{ parameters.accountName }}
      AZ_STORAGE_ACCOUNT_KEY: ${{ parameters.accountKey }}

    displayName: 'Run integration tests'
  
  - task: PublishTestResults@2
    inputs:
      testResultsFormat: 'JUnit'
      testResultsFiles: '**/test_*.xml'
      testRunTitle: 'Publish test results'
    displayName: 'Publish test results'
    condition: succeededOrFailed()



  # - deployment: deploy_adf
  #   displayName: 'Deploy to Azure Data Factory'
  #   pool:
  #     vmImage: 'windows-2019'
  #   environment: ${{ parameters.environmentName }}
  #   strategy:
  #     runOnce:
  #       deploy:
  #         steps:
  #           - checkout: mdwdataops_adfpublish
  #             path: 'adf_publish'

  #           # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-powershell
  #           - task: AzurePowerShell@4
  #             displayName: 'Azure PowerShell script: Stop ADF triggers'
  #             inputs:
  #               azureSubscription: ${{ parameters.serviceConnection }}
  #               ScriptPath: '$(Pipeline.Workspace)/ciartifacts/adf_scripts/deploymentadf.ps1'
  #               ScriptArguments: '-armTemplate "$(Pipeline.Workspace)\adf_publish\$(devAdfName)\ARMTemplateForFactory.json" -ResourceGroupName "$(rgName)" -DataFactoryName "$(adfName)" -predeployment $true'
  #               azurePowerShellVersion: LatestVersion

  #           # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment
  #           - task: AzureResourceGroupDeployment@2
  #             displayName: 'Azure Deployment:Create Or Update Resource Group action on $(rgName)'
  #             inputs:
  #               azureSubscription: ${{ parameters.serviceConnection }}
  #               resourceGroupName: '$(rgName)'
  #               location: '$(azureLocation)'
  #               csmFile: '$(Pipeline.Workspace)/adf_publish/$(devAdfName)/ARMTemplateForFactory.json'
  #               csmParametersFile: '$(Pipeline.Workspace)/adf_publish/$(devAdfName)/ARMTemplateParametersForFactory.json'
  #               overrideParameters: -factoryName "$(adfName)" -DataLakeStorage_properties_typeProperties_url "https://$(datalakeAccountName).dfs.core.windows.net/" -KeyVault_properties_typeProperties_baseUrl "$(kvUrl)" -SourceDataStorage_properties_typeProperties_url "https://$(fileshareAccountName).dfs.core.windows.net/"

  #           # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-powershell
  #           - task: AzurePowerShell@4
  #             displayName: 'Azure PowerShell script: Start ADF triggers'
  #             inputs:
  #               azureSubscription: ${{ parameters.serviceConnection }}
  #               ScriptPath: '$(Pipeline.Workspace)/ciartifacts/adf_scripts/deploymentadf.ps1'
  #               ScriptArguments: '-armTemplate "$(Pipeline.Workspace)\adf_publish\$(devAdfName)\ARMTemplateForFactory.json" -ResourceGroupName "$(rgName)" -DataFactoryName "$(adfName)" -predeployment $false'
  #               azurePowerShellVersion: LatestVersion

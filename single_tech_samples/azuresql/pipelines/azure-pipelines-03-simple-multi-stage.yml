trigger:
- main

pr: none

variables:
  SLN_NAME: 'ddo_samples_azuresql'
  SLN_DIR: 'single_tech_samples\azuresql\src\$(SLN_NAME)'
  SLN: '$(SLN_DIR)\$(SLN_NAME).sln'
  BUILD_PLATFORM: 'any cpu'
  BUILD_CONFIGURATION: 'release'
  AZURESQL_FULL_SERVER_NAME: '$(AZURESQL_SERVER_NAME).database.windows.net'

stages:
- stage: 'Build'
  displayName: 'Build'
  # condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/BRANCH_NAME'))
  jobs:
  - job: 'build_sql_dacpac'
    displayName: 'Build SQL DACPAC'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install Nuget'
    - task: NuGetCommand@2
      displayName: 'Restore Nuget packages'
      inputs:
        restoreSolution: '$(SLN)'
    - task: VSBuild@1
      displayName: 'Build solution sln'
      inputs:
        solution: '$(SLN)'
        platform: '$(BUILD_PLATFORM)'
        configuration: '$(BUILD_CONFIGURATION)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(SLN_DIR)\$(SLN_NAME)\bin\$(BUILD_CONFIGURATION)\$(SLN_NAME).dacpac' # wildcards(*) are not supported
        artifact: 'sql_dacpac'
        publishLocation: 'pipeline'

- stage: 'Deploy'
  displayName: 'Deploy'
  # condition: and(always(), contains(variables['Build.SourceBranch'], 'refs/heads/BRANCH_NAME'))
  jobs:
  - job: 'deploy_sql_dacpac'
    displayName: 'Deploy SQL DACPAC'
    pool:
      vmImage: 'windows-latest'
    steps:
    - download: current
      artifact: 'sql_dacpac'
    - task: SqlAzureDacpacDeployment@1
      inputs:
        azureSubscription: 'mdwdo-azsql'
        AuthenticationType: 'server'
        ServerName: '$(AZURESQL_FULL_SERVER_NAME)'
        DatabaseName: '$(AZURESQL_DB_NAME)'
        SqlUsername: '$(AZURESQL_SERVER_USERNAME)'
        SqlPassword: '$(AZURESQL_SERVER_PASSWORD)'
        deployType: 'DacpacTask'
        DeploymentAction: 'Publish'
        DacpacFile: '$(Pipeline.Workspace)\sql_dacpac\$(SLN_NAME).dacpac'
        IpDetectionMethod: 'AutoDetect'
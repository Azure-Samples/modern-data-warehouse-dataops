{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "securityGroupName": {
      "defaultValue": "databricks-nsg",
      "type": "string",
      "metadata": {
        "description": "The name of the existing network security group to create."
      }
    },
    "spokeVnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create."
      }
    },
    "hubVnetName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network to create."
      }
    },
    "privateSubnetName": {
      "defaultValue": "private-subnet",
      "type": "string",
      "metadata": {
        "description": "The name of the private subnet to create."
      }
    },
    "privatelinkSubnetName": {
      "defaultValue": "privatelink-subnet",
      "type": "string",
      "metadata": {
        "description": "The name of the private subnet to create."
      }
    },
    "publicSubnetName": {
      "defaultValue": "public-subnet",
      "type": "string",
      "metadata": {
        "description": "The name of the public subnet to create."
      }
    },
    "firewallSubnetName": {
      "defaultValue": "AzureFirewallSubnet",
      "type": "string",
      "metadata": {
        "description": "The name of the firewall subnet to create."
      }
    },
    "routeTableName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Routing Table"
      }
    },
    "vnetLocation": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "spokeVnetCidr": {
      "defaultValue": "10.179.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the spoke vnet."
      }
    },
    "hubVnetCidr": {
      "defaultValue": "10.0.0.0/16",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the hub vnet."
      }
    },
    "privateSubnetCidr": {
      "defaultValue": "10.179.0.0/18",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the private subnet."
      }
    },
    "publicSubnetCidr": {
      "defaultValue": "10.179.64.0/18",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the public subnet."
      }
    },
    "firewallSubnetCidr": {
      "defaultValue": "10.0.1.0/26",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the firewall subnet."
      }
    },
    "privatelinkSubnetCidr": {
      "defaultValue": "10.179.128.0/26",
      "type": "string",
      "metadata": {
        "description": "Cidr range for the private link subnet.."
      }
    }
  },
  "variables": {
    "securityGroupId": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('securityGroupName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2020-08-01",
      "name": "[parameters('hubVnetName')]",
      "location": "[parameters('vnetLocation')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('hubVnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('firewallSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('firewallSubnetCidr')]",
              "privateEndpointNetworkPolicies": "Enabled",
              "privateLinkServiceNetworkPolicies": "Enabled",
              "serviceEndpoints": [
                {
                  "service": "Microsoft.Storage",
                  "locations": [
                    "eastus",
                    "westus"
                  ]
                }
              ]
            }
          }
        ],
        "enableDdosProtection": false
      },
      "resources": [
        {
          "apiVersion": "2020-08-01",
          "type": "virtualNetworkPeerings",
          "name": "Peer-HubSpoke",
          "location": "[parameters('vnetLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": true,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('spokeVnetName'))]"
            }
          }
        }
      ]
    },
    {
      "apiVersion": "2020-08-01",
      "type": "Microsoft.Network/virtualNetworks",
      "location": "[parameters('vnetLocation')]",
      "name": "[parameters('spokeVnetName')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('spokeVnetCidr')]"
          ]
        },
        "subnets": [
          {
            "name": "[parameters('publicSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('publicSubnetCidr')]",
              "networkSecurityGroup": {
                "id": "[variables('securityGroupId')]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
              },
              "delegations": [
                {
                  "name": "databricks-del-public",
                  "properties": {
                    "serviceName": "Microsoft.Databricks/workspaces"
                  }
                }
              ]
            }
          },
          {
            "name": "[parameters('privateSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privateSubnetCidr')]",
              "networkSecurityGroup": {
                "id": "[variables('securityGroupId')]"
              },
              "routeTable": {
                "id": "[resourceId('Microsoft.Network/routeTables', parameters('routeTableName'))]"
              },
              "delegations": [
                {
                  "name": "databricks-del-private",
                  "properties": {
                    "serviceName": "Microsoft.Databricks/workspaces"
                  }
                }
              ]
            }
          },
          {
            "name": "[parameters('privatelinkSubnetName')]",
            "properties": {
              "addressPrefix": "[parameters('privatelinkSubnetCidr')]",
              "delegations": [],
              "privateEndpointNetworkPolicies": "Disabled",
              "privateLinkServiceNetworkPolicies": "Enabled"
            }
          }
        ],
        "enableDdosProtection": false
      },
      "resources": [
        {
          "apiVersion": "2020-08-01",
          "type": "virtualNetworkPeerings",
          "name": "Peer-SpokeHub",
          "location": "[parameters('vnetLocation')]",
          "dependsOn": [
            "[resourceId('Microsoft.Network/virtualNetworks/', parameters('hubVnetName'))]",
            "[resourceId('Microsoft.Network/virtualNetworks/', parameters('spokeVnetName'))]"
          ],
          "properties": {
            "allowVirtualNetworkAccess": true,
            "allowForwardedTraffic": true,
            "allowGatewayTransit": false,
            "useRemoteGateways": false,
            "remoteVirtualNetwork": {
              "id": "[resourceId('Microsoft.Network/virtualNetworks',parameters('hubVnetName'))]"
            }
          }
        }
      ]
    }
  ],
  "outputs": {
    "spoke_vnet_id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks', parameters('spokeVnetName'))]"
    },
    "privatelinksubnet_id": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualNetworks/subnets', parameters('spokeVnetName'),parameters('privatelinkSubnetName'))]"
    }
  }
}
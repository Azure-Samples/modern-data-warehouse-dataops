parameters:
- name: environmentName
  type: string
- name: databricksDomain
  type: string
- name: databricksClusterId
  type: string
- name: databricksToken
  type: string
- name: databricksJobName
  type: string
- name: databricksArtifactsPath
  type: string

jobs:
- deployment: deploy_spark_python
  environment: ${{ parameters.environmentName }}
  displayName: 'Deploy spark python job to Databricks'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    pythonVersion: 3.8
    deploymenFile: './temp_deployment_spark_python.json'
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(pythonVersion)'
            addToPath: true
            architecture: 'x64'
          displayName: 'Use Python Version: $(pythonVersion)'

        - checkout: self
          persistCredentials: true
          clean: true
          displayName: 'Checkout & Build.Reason: $(Build.Reason) & Build.SourceBranchName: $(Build.SourceBranchName)'

        - script: |
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install -e .
          displayName: 'Install dependencies'

        - template: create-deployment-json.yml
          parameters:
            configFile: './conf/deployment_spark_python_new_cluster.json'
            databricksClusterId: '${{ parameters.databricksClusterId}}' # not used, new cluster
            databricksJobName: '${{ parameters.databricksJobName}}'
            databricksArtifactsPath: '${{ parameters.databricksArtifactsPath}}'
            databricksDeploymentFilePath: $(deploymenFile)


        - script: |
            echo "dbx deploy job $DATABRICKS_JON_NAME ..."
            dbx deploy --deployment-file=$(deploymenFile) --jobs=$DATABRICKS_JON_NAME --files-only
          displayName: 'Deploy Spark Python Job'
          env:
            DATABRICKS_HOST: ${{ parameters.databricksDomain }}
            DATABRICKS_TOKEN: ${{ parameters.databricksToken }}
            DATABRICKS_JON_NAME: ${{ parameters.databricksJobName}}

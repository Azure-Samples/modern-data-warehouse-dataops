parameters:
- name: environmentName
  type: string
- name: databricksDomain
  type: string
- name: databricksToken
  type: string
- name: databricksClusterId
  type: string
- name: databricksNotebookPath  # Databricks workspace path where TESTS notebook are located.
  type: string




jobs:
- deployment: run_notebook_test
  dependsOn: deploy_notebooks
  environment: ${{ parameters.environmentName }}
  displayName: 'Test notebooks with nutter'
  pool:
    vmImage: 'ubuntu-latest'
  variables:
    pythonWorkingDir: '.'
    pythonVersion: 3.8
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(pythonVersion)'

        - script: |
            pip install nutter
          displayName: 'Install Nutter'

        - script: |
            python -m pip install --upgrade pip
            pip install databricks-cli
          displayName: 'Setup Databricks CLI'

        - script: |
            databricks libraries install --cluster-id $CLUSTER --pypi-package nutter
          displayName: 'Install Nutter Library'
          env:
            DATABRICKS_HOST: ${{ parameters.databricksDomain}}
            DATABRICKS_TOKEN: ${{ parameters.databricksToken}}
            CLUSTER: ${{ parameters.databricksClusterId}}


        - script: |
            nutter run $NOTEBOOK_PATH $CLUSTER --recursive --junit_report
          displayName: 'Execute Nutter'
          env:
            CLUSTER: ${{ parameters.databricksClusterId}}
            DATABRICKS_HOST: ${{ parameters.databricksDomain}}
            DATABRICKS_TOKEN: ${{ parameters.databricksToken}}
            NOTEBOOK_PATH: ${{ parameters.databricksNotebookPath}}

        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/test-*.xml'
            testRunTitle: 'Publish Nutter results'
          condition: succeededOrFailed()
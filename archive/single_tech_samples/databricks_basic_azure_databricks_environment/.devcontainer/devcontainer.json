// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.163.1/containers/debian
{
	"name": "single-tech databricks sample",
	"build": {
		"dockerfile": "Dockerfile",
		// Update 'VARIANT' to pick an Debian version: buster, stretch
		"args": {
			"VARIANT": "buster"
		}
	},
	// Set *default* container specific settings.json values on container create.
	"settings": {
		"terminal.integrated.shell.linux": "/bin/bash",
		"shellformat.path": "/usr/local/bin/shfmt",
		"shellformat.flag": "-ci -kp"
	},
	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"foxundermoon.shell-format",
		"ms-azuretools.vscode-docker",
		"msazurermtools.azurerm-vscode-tools",
		"streetsidesoftware.code-spell-checker",
		"timonwong.shellcheck",
		"yzhang.markdown-all-in-one",
		"davidanson.vscode-markdownlint"
	],
	"postCreateCommand": "az extension add --name databricks --yes --output none && az extension add --name azure-firewall --yes --output none",
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],
	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],
	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],
	// Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
	"remoteUser": "vscode"
}
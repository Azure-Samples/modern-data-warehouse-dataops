# Creates an Azure Function for transferring logs from the Data Lake to Log Analytics.
#
# This pipeline depends on resources created by the very main, create-infrastucture.yml, pipeline, namely:
#
#   - Application Insights
#   - Log Analytics
#
---
parameters:
  - name: azureServiceConnection
    type: string
  - name: resourceGroup
    type: string
  - name: location
    default: westeurope
    type: string
  - name: functionAppName
    type: string
  - name: dataLakeAccountName
    type: string
  - name: targetLogAnalyticsWorkspaceName
    type: string
  - name: logAnalyticsWorkspaceName
    type: string
  - name: applicationInsightsName
    type: string
  - name: diagnosticSettingName
    type: string

steps:
  - task: AzureResourceManagerTemplateDeployment@3
    displayName: Deploy Azure Function
    inputs:
      deploymentScope: 'Resource Group'
      azureResourceManagerConnection: ${{ parameters.azureServiceConnection }}
      action: 'Create Or Update Resource Group'
      resourceGroupName: ${{ parameters.resourceGroup }}
      location: ${{ parameters.location }}
      templateLocation: 'Linked artifact'
      csmFile: "./arm-templates/azure_function_datalakelogs.json"
      csmParametersFile: './arm-templates/azure_function_datalakelogs.parameters.json'
      overrideParameters: >
        -functionAppName ${{ parameters.functionAppName }}
        -location ${{ parameters.location }}
        -dataLakeAccountName ${{ parameters.dataLakeAccountName }}
        -targetLogAnalyticsWorkspaceName ${{ parameters.targetLogAnalyticsWorkspaceName }}
        -logAnalyticsWorkspaceName ${{ parameters.logAnalyticsWorkspaceName }}
        -applicationInsightsName ${{ parameters.applicationInsightsName }}
        -diagnosticSettingName ${{ parameters.diagnosticSettingName }}
      deploymentMode: 'Incremental'
      deploymentName: 'azure-function-storage-trigger'
      deploymentOutputs: 'azureFunctionDeploymentOutputs'

  - task: AzureCLI@2
    displayName: Process Azure Function deployment output
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnection }}
      scriptType: 'pscore'
      scriptLocation: 'inlineScript'
      inlineScript: |
        $var=ConvertFrom-Json '$(azureFunctionDeploymentOutputs)'
        $value=$var.azureFunctionMsiObject.value
        Write-Host "##vso[task.setvariable variable=webAppMsi;]$value"
        $value=$var.azureFunctionName.value
        Write-Host "##vso[task.setvariable variable=webAppName;]$value"
  - task: ArchiveFiles@2
    displayName: 'Archive FunctionApp'
    inputs:
      rootFolderOrFile: ./src/DataLakeLogsToLogAnalyticsFunction
      includeRootFolder: false
      archiveFile: '$(System.DefaultWorkingDirectory)/zip/FunctionApp.zip'
  - task: AzureFunctionApp@1
    displayName: 'Deploy Azure Function'
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnection }}
      appType: functionApp
      appName: ${{ parameters.functionAppName }}
      package: '$(System.DefaultWorkingDirectory)/zip/*.zip'
      deploymentMethod: 'auto'

  - task: AzureCLI@2
    inputs:
      azureSubscription: ${{ parameters.azureServiceConnection }}
      scriptType: 'pscore'
      scriptLocation: 'scriptPath'
      scriptPath: './scripts/environment/Set-AdlRoleAssignmentForLogSenderFunction.ps1'
    env:
      STORAGE_ACCOUNT_NAME: ${{ parameters.dataLakeAccountName }}
      FUNCTION_APP_NAME: ${{ parameters.functionAppName }}
      RESOURCE_GROUP: ${{ parameters.resourceGroup }}
    displayName: Set permissions for function app

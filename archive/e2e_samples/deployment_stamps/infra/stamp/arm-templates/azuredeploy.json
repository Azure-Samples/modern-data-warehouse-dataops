{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "base_name": {
      "type": "string",
      "maxLength": 10,
      "minLength": 3,
      "metadata": {
        "description": "The base name to use as prefix to create all the resources."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Specifies the location of the stamp. i.e., 'japaneast'."
      }
    },
    "tenant_id": {
      "type": "string",
      "defaultValue": "[subscription().tenantId]",
      "metadata": {
        "description": "Specifies the Azure Service Connection Tenant ID."
      }
    },
    "client_id": {
      "type": "string",
      "metadata": {
        "description": "Specifies the Azure Service Connection Client ID."
      }
    },
    "adls_name": {
      "type": "string",
      "defaultValue": "[concat('st', toLower(parameters('base_name')))]",
      "metadata": {
        "description": "Specifies the name of the storage account within the specified resource group. Storage account names must be between 3 and 24 characters in length and use numbers and lower-case letters only."
      }
    },
    "adls_sku_name": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "Specifies the SKU name."
      }
    },
    "adls_sku_tier": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Premium"
      ]
    },
    "adls_kind": {
      "type": "string",
      "defaultValue": "StorageV2",
      "allowedValues": [
        "Storage",
        "StorageV2",
        "BlobStorage",
        "FileStorage",
        "BlockBlobStorage"
      ],
      "metadata": {
        "description": "Specifies the type of storage account."
      }
    },
    "adls_access_tier": {
      "type": "string",
      "defaultValue": "Hot",
      "allowedValues": [
        "Hot",
        "Cool"
      ],
      "metadata": {
        "description": "Required for storage accounts where kind = BlobStorage. The access tier used for billing."
      }
    },
    "appsrvplan_name": {
      "type": "string",
      "defaultValue": "[concat('plan-', toLower(parameters('base_name')), '-api')]",
      "metadata": {
        "description": "Specifies the name of the App Service Plan."
      }
    },
    "appsrvplan_sku": {
      "type": "string",
      "defaultValue": "B1",
      "allowedValues": [
        "F1",
        "D1",
        "B1",
        "B2",
        "B3",
        "S1",
        "S2",
        "S3"
      ]
    },
    "appsrv_name": {
      "type": "string",
      "defaultValue": "[concat('api-', toLower(parameters('base_name')))]",
      "metadata": {
        "description": "Specifies the name of the App Service."
      }
    },
    "func_telemetry_host_plan_name": {
      "type": "string",
      "defaultValue": "[concat('plan-', toLower(parameters('base_name')), '-func')]",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "func_telemetry_host_sku_name": {
      "type": "string",
      "defaultValue": "B1",
      "metadata": {
        "description": "Specifies the SKU name."
      }
    },
    "func_telemetry_app_name": {
      "type": "string",
      "defaultValue": "[concat('func-', toLower(parameters('base_name')))]",
      "metadata": {
        "description": "The name of the function app that you wish to create."
      }
    },
    "evhns_name": {
      "type": "string",
      "defaultValue": "[concat('evhns-', toLower(parameters('base_name')))]"
    },
    "evhns_sku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [ 
        "Basic", 
        "Standard",
        "Premium" 
      ],
      "metadata": {
        "description": "Specifies the messaging tier for Event Hub Namespace."
      }
    },
    "evh_telemetry_name": {
      "type": "string",
      "defaultValue": "evh-tel"
    },
    "evh_telemetry_listen_policy_name":{
      "type": "string",
      "defaultValue": "listen"
    },
    "evh_telemetry_send_policy_name":{
      "type": "string",
      "defaultValue": "send"
    },
    "evh_telemetry_partition": {
      "type": "int",
      "defaultValue": 32,
      "metadata": {
        "description": "Specifies the EventHub partition count."
      }
    },
    "cosmos_name": {
      "type": "string",
      "defaultValue": "[concat('cosmos', toLower(parameters('base_name')))]",
      "metadata": {
        "description": "Specifies the name of the Cosmos DB account. The name can contain only lowercase letters, numbers and the '-' character, and must be between 3 and 44 characters."
      }
    },
    "cosmos_auto_max_throughput": {
      "type": "int",
      "defaultValue": 4000,
      "minValue": 4000,
      "maxValue": 1000000
    },
    "cosmos_database_name": {
        "type": "string"
    },
    "cosmos_container_name_tenantdetails": {
      "type": "string"
    },
    "cosmos_partition_key_tenantdetails": {
      "type": "string"
    },
    "as_coreapi_name_azuread_allowwebapitobeauthorizedbyaCL": {
      "type": "string"
    },
    "as_coreapi_name_azuread_callbackpath": {
      "type": "string"
    },
    "as_coreapi_name_azuread_clientid": {
      "type": "string"
    },
    "as_coreapi_name_azuread_domain": {
      "type": "string"
    },
    "as_coreapi_name_azuread_instance": {
      "type": "string"
    },
    "as_coreapi_name_azuread_tenantid": {
      "type": "string"
    },
    "as_coreapi_name_connectionstring_cosmos": {
      "type": "string"
    },
    "as_coreapi_name_connectionstring_storage": {
      "type": "string"
    },
    "as_coreapi_name_cosmos_database_name": {
      "type": "string"
    },
    "as_coreapi_name_cosmos_container_name_default": {
      "type": "string"
    },
    "as_coreapi_name_cosmos_container_name_tenantdetails": {
      "type": "string"
    },
    "as_coreapi_name_cosmos_maxretryattemptsonratelimitedrequests": {
      "type": "string"
    },
    "as_coreapi_name_cosmos_maxretrywaittimeonratelimitedrequests": {
      "type": "string"
    },
    "as_coreapi_name_scaleunit": {
      "type": "string"
    },
    "as_coreapi_value_azuread_allowwebapitobeauthorizedbyaCL": {
      "type": "string"
    },
    "as_coreapi_value_azuread_callbackpath": {
      "type": "string"
    },
    "as_coreapi_value_azuread_instance": {
      "type": "string"
    },
    "as_coreapi_value_cosmos_container_name_default": {
      "type": "string"
    },
    "as_coreapi_value_cosmos_container_name_tenantdetails": {
      "type": "string"
    },
    "as_coreapi_value_cosmos_database_name": {
      "type": "string"
    },
    "as_coreapi_value_cosmos_maxretryattemptsonratelimitedrequests": {
      "type": "string"
    },
    "as_coreapi_value_cosmos_maxretrywaittimeonratelimitedrequests": {
      "type": "string"
    },
    "as_telemetryprocessor_name_connectionstring_evh": {
      "type": "string"
    },
    "as_telemetryprocessor_name_connectionstring_adls": {
      "type": "string"
    },
    "stamp_id": {
      "type": "string"
    }
  },
  "variables": {
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2021-02-01",
      "name": "[parameters('adls_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('adls_sku_name')]",
        "tier": "[parameters('adls_sku_tier')]"
      },
      "kind": "[parameters('adls_kind')]",
      "properties": {
        "accessTier": "[parameters('adls_access_tier')]",
        "isHnsEnabled": true
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2021-04-15",
      "name": "[parameters('cosmos_name')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard"
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmos_name'), '/', parameters('cosmos_database_name'))]",
      "dependsOn": [ "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_name'))]" ],
      "properties":{
          "resource":{
              "id": "[parameters('cosmos_database_name')]"
          },
          "options": {
            "autoscaleSettings": { 
              "maxThroughput": "[parameters('cosmos_auto_max_throughput')]" 
            }
          }
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2021-04-15",
      "name": "[concat(parameters('cosmos_name'), '/', parameters('cosmos_database_name'), '/', parameters('cosmos_container_name_tenantdetails'))]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmos_name'), parameters('cosmos_database_name'))]"
      ],
      "properties": {
        "resource": {
          "id": "[parameters('cosmos_container_name_tenantdetails')]",
          "partitionKey": {
            "paths": [
              "[concat('/', parameters('cosmos_partition_key_tenantdetails'))]"
            ]
          }
        }
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[parameters('appsrvplan_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('appsrvplan_sku')]"
      },
      "kind": "app",
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[parameters('appsrv_name')]",
      "location": "[parameters('location')]",
      "kind": "app",
      "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', parameters('appsrvplan_name'))]"
      ],
      "identity": {
          "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appsrvplan_name'))]",
        "siteConfig": {
          "netFrameworkVersion": "v5.0"
        }
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-12-01",
      "name": "[parameters('func_telemetry_host_plan_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('func_telemetry_host_sku_name')]"
      },
      "kind": "app",
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-12-01",
      "name": "[parameters('func_telemetry_app_name')]",
      "location": "[parameters('location')]",
      "kind": "functionapp",
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', parameters('func_telemetry_host_plan_name'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('adls_name'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('func_telemetry_host_plan_name'))]",
        "siteConfig": {
          "alwaysOn": true
        }
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces",
      "apiVersion": "2021-01-01-preview",
      "name": "[parameters('evhns_name')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[parameters('evhns_sku')]"
      },
      "properties": {},
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/AuthorizationRules",
      "apiVersion": "2021-01-01-preview",
      "name": "[concat(parameters('evhns_name'), '/RootManageSharedAccessKey')]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces', parameters('evhns_name'))]"
      ],
      "properties": {
        "rights": [
          "Listen",
          "Manage",
          "Send"
        ]
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs",
      "apiVersion": "2021-01-01-preview",
      "name": "[concat(parameters('evhns_name'), '/', parameters('evh_telemetry_name'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.EventHub/namespaces', parameters('evhns_name'))]"
      ],
      "properties": {
        "messageRetentionInDays": 1,
        "partitionCount": "[parameters('evh_telemetry_partition')]"
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-01-01-preview",
      "name": "[concat(parameters('evhns_name'), '/', parameters('evh_telemetry_name'), '/', parameters('evh_telemetry_listen_policy_name'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('evhns_name'), parameters('evh_telemetry_name'))]",
          "[resourceId('Microsoft.EventHub/namespaces', parameters('evhns_name'))]"
      ],
      "properties": {
          "rights": [
              "Listen"
          ]
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.EventHub/namespaces/eventhubs/authorizationRules",
      "apiVersion": "2021-01-01-preview",
      "name": "[concat(parameters('evhns_name'), '/', parameters('evh_telemetry_name'), '/', parameters('evh_telemetry_send_policy_name'))]",
      "location": "[parameters('location')]",
      "dependsOn": [
          "[resourceId('Microsoft.EventHub/namespaces/eventhubs', parameters('evhns_name'), parameters('evh_telemetry_name'))]",
          "[resourceId('Microsoft.EventHub/namespaces', parameters('evhns_name'))]"
      ],
      "properties": {
          "rights": [
              "Send"
          ]
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(parameters('appsrv_name'), '/appsettings')]",
      "apiVersion": "2020-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('func_telemetry_app_name'))]"  
      ],
      "properties": {
        "WEBSITE_RUN_FROM_PACKAGE":"1",
        "[parameters('as_coreapi_name_azuread_allowwebapitobeauthorizedbyaCL')]": "[parameters('as_coreapi_value_azuread_allowwebapitobeauthorizedbyaCL')]",
        "[parameters('as_coreapi_name_azuread_callbackpath')]": "[parameters('as_coreapi_value_azuread_callbackpath')]",
        "[parameters('as_coreapi_name_azuread_clientid')]": "[parameters('client_id')]",
        "[parameters('as_coreapi_name_azuread_domain')]": "[parameters('tenant_id')]",
        "[parameters('as_coreapi_name_azuread_instance')]": "[parameters('as_coreapi_value_azuread_instance')]",
        "[parameters('as_coreapi_name_azuread_tenantid')]": "[parameters('tenant_id')]",
        "[parameters('as_coreapi_name_connectionstring_cosmos')]": "[listConnectionStrings(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmos_name')), '2021-03-01-preview').connectionStrings[0].connectionString]",
        "[parameters('as_coreapi_name_connectionstring_storage')]": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('adls_name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('adls_name')), '2019-06-01').keys[0].value)]",
        "[parameters('as_coreapi_name_cosmos_database_name')]": "[parameters('as_coreapi_value_cosmos_database_name')]",
        "[parameters('as_coreapi_name_cosmos_container_name_default')]": "[parameters('as_coreapi_value_cosmos_container_name_default')]",
        "[parameters('as_coreapi_name_cosmos_container_name_tenantdetails')]": "[parameters('as_coreapi_value_cosmos_container_name_tenantdetails')]",
        "[parameters('as_coreapi_name_cosmos_maxretryattemptsonratelimitedrequests')]": "[parameters('as_coreapi_value_cosmos_maxretryattemptsonratelimitedrequests')]",
        "[parameters('as_coreapi_name_cosmos_maxretrywaittimeonratelimitedrequests')]": "[parameters('as_coreapi_value_cosmos_maxretrywaittimeonratelimitedrequests')]",
        "[parameters('as_coreapi_name_scaleunit')]": "[parameters('base_name')]"
      }
    },
    {
      "type": "Microsoft.Web/sites/config",
      "name": "[concat(parameters('func_telemetry_app_name'), '/appsettings')]",
      "apiVersion": "2020-09-01",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('func_telemetry_app_name'))]"
      ],
      "properties": {
        "AzureWebJobsStorage":"[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('adls_name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('adls_name')), '2019-06-01').keys[0].value)]",
        "FUNCTIONS_EXTENSION_VERSION":"~3",      
        "FUNCTIONS_WORKER_RUNTIME":"dotnet-isolated",
        "WEBSITE_RUN_FROM_PACKAGE":"1",
        "[parameters('as_telemetryprocessor_name_connectionstring_evh')]": "[listKeys(resourceId('Microsoft.EventHub/namespaces/eventhubs/authorizationRules', parameters('evhns_name'), parameters('evh_telemetry_name'), parameters('evh_telemetry_listen_policy_name')), '2021-01-01-preview').primaryConnectionString]",
        "[parameters('as_telemetryprocessor_name_connectionstring_adls')]": "[concat('DefaultEndpointsProtocol=https;AccountName=', parameters('adls_name'), ';EndpointSuffix=', environment().suffixes.storage, ';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('adls_name')), '2019-06-01').keys[0].value)]"
      },
      "tags": {
        "stamp_id": "[parameters('stamp_id')]"
      }
    }
  ]
}
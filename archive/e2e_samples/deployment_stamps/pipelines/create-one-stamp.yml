trigger: none

parameters:
  - name: arm_connection
    displayName: Azure Resource Manager Connection Name
    type: string
  - name: subscription_id
    displayName: Subscription Id
    type: string
  - name: location
    displayName: Location (i.e. japaneast)
    type: string
  - name: rg
    displayName: Resource Group
    type: string
  - name: base_name
    displayName: Base Name (a prefix used to create resources)
    type: string
  - name: tenant_id
    displayName: Tenant Id (id of the center tenant)
    type: string
  - name: client_id
    displayName: Client Id (client/application id of the Azure AD app registration to handle authentication)
    type: string
  - name: stamp_id
    displayName: Stamp Id (tag to filter resources)
    type: string

pool:
  vmImage: ubuntu-latest

steps:

- task: AzureResourceManagerTemplateDeployment@3
  displayName: '[IaC] create the stamp resources'
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '${{ parameters.arm_connection }}'
    subscriptionId: '${{ parameters.subscription_id }}'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '${{ parameters.rg }}'
    location: '${{ parameters.location }}'
    templateLocation: 'Linked artifact'
    csmFile: '$(Build.SourcesDirectory)/infra/stamp/arm-templates/azuredeploy.json'
    csmParametersFile: '$(Build.SourcesDirectory)/infra/stamp/arm-templates/azuredeploy.parameters.json'
    deploymentMode: 'Incremental'
    overrideParameters: "-base_name ${{ parameters.base_name }}
                        -location ${{ parameters.location }}
                        -tenant_id ${{ parameters.tenant_id }}
                        -client_id ${{ parameters.client_id }}
                        -stamp_id ${{ parameters.stamp_id }}"

- task: UseDotNet@2
  displayName: 'Use .NET 3.1 sdk'
  inputs:
    packageType: sdk
    version: 3.1.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: UseDotNet@2
  displayName: 'Use .NET 5 sdk'
  inputs:
    packageType: sdk
    version: 5.0.x
    installationPath: $(Agent.ToolsDirectory)/dotnet

- task: DotNetCoreCLI@2
  displayName: '[functions] dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    projects: '**/functions/**/*.csproj'
    arguments: '--configuration Release --output $(Build.DefaultWorkingDirectory)/functions'
    zipAfterPublish: true

- task: AzureFunctionApp@1
  displayName: '[functions] deploy to Azure Functions'
  inputs:
    azureSubscription: '${{ parameters.arm_connection }}'
    appType: functionApp
    appName: 'func-${{ parameters.base_name }}'
    package: '$(Build.DefaultWorkingDirectory)/functions/**/*.zip'

- task: DotNetCoreCLI@2
  displayName: '[api] dotnet publish'
  inputs:
    command: 'publish'
    publishWebProjects: false
    projects: '**/api/**/*.csproj'
    arguments: '--configuration Release --output $(Build.DefaultWorkingDirectory)/api'
    zipAfterPublish: true

- task: AzureRmWebAppDeployment@4
  displayName: '[api] deploy to Azure App Service'
  inputs:
    ConnectionType: 'AzureRM'
    azureSubscription: '${{ parameters.arm_connection }}'
    appType: 'webApp'
    WebAppName: 'api-${{ parameters.base_name }}'
    packageForLinux: '$(Build.DefaultWorkingDirectory)/api/**/*.zip'


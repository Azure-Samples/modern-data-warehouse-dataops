{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "factoryName": {
            "type": "string",
            "metadata": "Data Factory name"
        },
        "KeyVault_properties_typeProperties_baseUrl": {
            "type": "string"
        },
        "AzureBlobFS_properties_typeProperties_serviceEndpoint": {
            "type": "string"
        },
        "AzureSqlDatabase_properties_typeProperties_connectionString_secretName": {
            "type": "string",
            "defaultValue": "watermarkdb-connection"
        }
    },
    "variables": {
        "factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
    },
    "resources": [
        {
            "name": "[concat(parameters('factoryName'), '/KeyVault')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureKeyVault",
                "typeProperties": {
                    "baseUrl": "[parameters('KeyVault_properties_typeProperties_baseUrl')]"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureBlobFS')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureBlobStorage",
                "typeProperties": {
                    "serviceEndpoint": "[parameters('AzureBlobFS_properties_typeProperties_serviceEndpoint')]",
                    "accountKind": "StorageV2"
                }
            },
            "dependsOn": []
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDatabase')]",
            "type": "Microsoft.DataFactory/factories/linkedServices",
            "apiVersion": "2018-06-01",
            "properties": {
                "annotations": [],
                "type": "AzureSqlDatabase",
                "typeProperties": {
                    "connectionString": {
                        "type": "AzureKeyVaultSecret",
                        "store": {
                            "referenceName": "KeyVault",
                            "type": "LinkedServiceReference"
                        },
                        "secretName": "[parameters('AzureSqlDatabase_properties_typeProperties_connectionString_secretName')]"
                    }
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/KeyVault')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/AzureSqlDb')]",
            "type": "Microsoft.DataFactory/factories/datasets",
            "apiVersion": "2018-06-01",
            "properties": {
                "linkedServiceName": {
                    "referenceName": "AzureSqlDatabase",
                    "type": "LinkedServiceReference"
                },
                "annotations": [],
                "type": "AzureSqlTable",
                "schema": [],
                "typeProperties": {}
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/CopyWithVersion')]",
            "type": "Microsoft.DataFactory/factories/dataflows",
            "apiVersion": "2018-06-01",
            "properties": {
                "type": "MappingDataFlow",
                "typeProperties": {
                    "sources": [
                        {
                            "dataset": {
                                "referenceName": "AzureSqlDb",
                                "type": "DatasetReference"
                            },
                            "name": "SqlDb"
                        }
                    ],
                    "sinks": [
                        {
                            "linkedService": {
                                "referenceName": "AzureBlobFS",
                                "type": "LinkedServiceReference"
                            },
                            "name": "DeltaLake"
                        }
                    ],
                    "transformations": [],
                    "script": "parameters{\n\tSourceTableName as string ('source'),\n\tOldwaterMarkVal as string ('1900-01-01 00:00:00'),\n\tNewwaterMarkVal as string (toString(currentUTC()))\n}\nsource(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tquery: (\"Select * from {$SourceTableName} where issue_d > '{$OldwaterMarkVal}' and issue_d <= '{$NewwaterMarkVal}'\"),\n\tformat: 'query') ~> SqlDb\nSqlDb sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tfileSystem: 'datalake',\n\tfolderPath: 'lc_loan',\n\tmergeSchema: false,\n\tautoCompact: false,\n\toptimizedWrite: false,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> DeltaLake"
                }
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDb')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureBlobFS')]"
            ]
        },
        {
            "name": "[concat(parameters('factoryName'), '/DeltaCopyPipeline')]",
            "type": "Microsoft.DataFactory/factories/pipelines",
            "apiVersion": "2018-06-01",
            "properties": {
                "activities": [
                    {
                        "name": "LookupOldWatermark",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "SELECT WaterMarkVal\nFROM [dbo].[WaterMark]\nWHERE TableName = '@{pipeline().parameters.SourceTableName}'",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "LookupNewWatermark",
                        "type": "Lookup",
                        "dependsOn": [],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "source": {
                                "type": "AzureSqlSource",
                                "sqlReaderQuery": {
                                    "value": "Select Max(@{pipeline().parameters.WatermarkColumnName}) AS NewWaterMarkVal from @{pipeline().parameters.SourceTableName}",
                                    "type": "Expression"
                                },
                                "queryTimeout": "02:00:00",
                                "partitionOption": "None"
                            },
                            "dataset": {
                                "referenceName": "AzureSqlDb",
                                "type": "DatasetReference",
                                "parameters": {}
                            }
                        }
                    },
                    {
                        "name": "UpdateWatermark",
                        "type": "SqlServerStoredProcedure",
                        "dependsOn": [
                            {
                                "activity": "DeltaCopy",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "storedProcedureName": "[[dbo].[usp_UpdateWatermark]",
                            "storedProcedureParameters": {
                                "LastModifiedtime": {
                                    "value": {
                                        "value": "@activity('LookupNewWatermark').output.firstRow.NewWaterMarkVal",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                },
                                "TableName": {
                                    "value": {
                                        "value": "@pipeline().parameters.SourceTableName",
                                        "type": "Expression"
                                    },
                                    "type": "String"
                                }
                            }
                        },
                        "linkedServiceName": {
                            "referenceName": "AzureSqlDatabase",
                            "type": "LinkedServiceReference"
                        }
                    },
                    {
                        "name": "DeltaCopy",
                        "type": "ExecuteDataFlow",
                        "dependsOn": [
                            {
                                "activity": "LookupOldWatermark",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            },
                            {
                                "activity": "LookupNewWatermark",
                                "dependencyConditions": [
                                    "Succeeded"
                                ]
                            }
                        ],
                        "policy": {
                            "timeout": "7.00:00:00",
                            "retry": 0,
                            "retryIntervalInSeconds": 30,
                            "secureOutput": false,
                            "secureInput": false
                        },
                        "userProperties": [],
                        "typeProperties": {
                            "dataflow": {
                                "referenceName": "CopyWithVersion",
                                "type": "DataFlowReference",
                                "parameters": {
                                    "SourceTableName": {
                                        "value": "'@{pipeline().parameters.SourceTableName}'",
                                        "type": "Expression"
                                    },
                                    "OldwaterMarkVal": {
                                        "value": "'@{activity('LookupOldWatermark').output.firstRow.WaterMarkVal}'",
                                        "type": "Expression"
                                    },
                                    "NewwaterMarkVal": {
                                        "value": "'@{activity('LookupNewWatermark').output.firstRow.NewWaterMarkVal}'",
                                        "type": "Expression"
                                    }
                                },
                                "datasetParameters": {
                                    "SqlDb": {},
                                    "DeltaLake": {}
                                }
                            },
                            "staging": {},
                            "compute": {
                                "coreCount": 8,
                                "computeType": "General"
                            },
                            "traceLevel": "Fine"
                        }
                    }
                ],
                "parameters": {
                    "SourceTableName": {
                        "type": "string",
                        "defaultValue": "source"
                    },
                    "WatermarkColumnName": {
                        "type": "string",
                        "defaultValue": "issue_d"
                    }
                },
                "annotations": []
            },
            "dependsOn": [
                "[concat(variables('factoryId'), '/datasets/AzureSqlDb')]",
                "[concat(variables('factoryId'), '/linkedServices/AzureSqlDatabase')]",
                "[concat(variables('factoryId'), '/dataflows/CopyWithVersion')]"
            ]
        }
    ]
}
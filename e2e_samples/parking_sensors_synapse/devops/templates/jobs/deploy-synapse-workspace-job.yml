parameters:
- name: environmentName
  type: string
- name: serviceConnection
  type: string

jobs:
- deployment: deploy_synapse_workspace
  dependsOn: [ deploy_dedicated_sql_pool, deploy_wheel_to_synapse ]
  displayName: 'Deploy Synapse Workspace'
  pool:
    vmImage: 'windows-2019'
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - checkout: mdwdataops_workspace_publish
          path: 'workspace_publish' 

        - task: Synapse workspace deployment@1
          inputs:
            TemplateFile: '$(Pipeline.Workspace)/workspace_publish/$(devSynapseWorkspaceName)/TemplateForWorkspace.json'
            ParametersFile: '$(Pipeline.Workspace)/workspace_publish/$(devSynapseWorkspaceName)/TemplateParametersForWorkspace.json'
            azureSubscription: ${{ parameters.serviceConnection }}
            ResourceGroupName: '$(rgName)'
            TargetWorkspaceName: '$(synapseWorkspaceName)'
            DeleteArtifactsNotInTemplate: false
            OverrideArmParameters: '-Ls_KeyVault_01_properties_typeProperties_baseUrl "$(kvUrl)" -Ls_Rest_MelParkSensors_01_properties_typeProperties_url "$(apiBaseUrl)" -P_Ingest_MelbParkingData_properties_5_sqlPool_referenceName "$(synapseDedicatedSqlPoolDBName)" -00_setup_properties_bigDataPool_referenceName "$(synapseSparkPoolName)" -01a_explore_properties_bigDataPool_referenceName "$(synapseSparkPoolName)" -01b_explore_sqlserverless_properties_bigDataPool_referenceName "$(synapseSparkPoolName)" -02_standardize_properties_bigDataPool_referenceName "$(synapseSparkPoolName)" -03_transform_properties_bigDataPool_referenceName "$(synapseSparkPoolName)"'

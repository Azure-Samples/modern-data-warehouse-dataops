# ##############################################################
# See - https://docs.python.org/3/library/configparser.html
# Tips:
# - ${section:option} can be used for interpolation of values from another section in the same file.
# - When creating stage specific resources like ADLS, whose names are globally unique
#    - make sure we can create them i.e, those names are available.
# we can also have env specific sections like [dev] , [test] etc.,
# but it could cause maintenance issues and may not be ideal.
# Instead, define common sections and here make env specific derivations
# based on the input "env/stage" value in the code.
#
##############################################################

# Important:
# - DO NOT use quotes for wrapping strings
# - Note that workspace_name etc are not defined at each section level
#   rather in DEFAULT section. This way we can use individual sections
#   like `setup` or `standardize` or `transform` to over-ride
#   the values from `DEFAULT` section if needed.

[DEFAULT]
service_name = parking_sensors_fabric_e2e
service_version = 0.1
workspace_name = {{ .workspace_name }}
workspace_id = {{ .workspace_id }}
lakehouse_name = {{ .lakehouse_name }}
lakehouse_id = {{ .lakehouse_id }}

[keyvault]
name = parking-sensor
uri = https://${keyvault:name}.vault.azure.net/

[setup]
# --------- Globals for nb-010-setup.ipynb
process_name = nb-010-setup
# ddl file path is relative to the attached lakehouse's Files/ location
ddl_file = sc-adls-main/config/lakehouse_ddls.yaml

[standardize]
# --------- Globals for nb-020-standardize.ipynb
process_name = nb-020-standardize

[transform]
# --------- Globals for nb-030-transform.ipynb
process_name = nb-030-transform

[otel]
appinsights_connection_name = app-insights-connection-string

trigger:
  branches:
    include:
      - <DEV_BRANCH_NAME>
  paths:
    include:
      - /*

pr: none

variables:
  - group: <VARIABLE_GROUP_NAME>

stages:
  - stage: 'publish_artifacts'
    displayName: 'Publish Build Artifacts'
    jobs:

      - job: 'publish_fabric_environment_config_artifacts'
        displayName: 'Publish Fabric Environment Config Artifacts'

        pool:
          vmImage: 'ubuntu-latest'
        steps:

          - task: UsePythonVersion@0
            inputs:
              versionSpec: '3.8'
              architecture: 'x64'

          - script: |
              pip install -r requirements.txt
            displayName: 'Install Requirements'
            workingDirectory: $(Build.SourcesDirectory)/libraries

          - script: |
              echo "Linting files in $(Build.SourcesDirectory)..."
              flake8 .
            displayName: 'Linting Files'
            workingDirectory: $(Build.SourcesDirectory)/libraries

          - script: |
              echo "Running tests in $(Build.SourcesDirectory)/libraries/test..."
              pytest .
            displayName: 'Run Tests'
            workingDirectory: $(Build.SourcesDirectory)/libraries

          - script: |
              mkdir fabric_env/
              cp fabric/fabric_environment/environment.yml fabric_env/

              mkdir fabric_env/custom_libraries/
              cp libraries/src/ddo_transform_standardize.py fabric_env/custom_libraries/
              cp libraries/src/ddo_transform_transform.py fabric_env/custom_libraries/
              cp libraries/src/otel_monitor_invoker.py fabric_env/custom_libraries/

            displayName: 'Build Fabric Environment Config Artifacts'
            workingDirectory: $(Build.SourcesDirectory)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: $(Build.SourcesDirectory)/fabric_env/
              ArtifactName: 'fabric_env'
            displayName: 'Publish Fabric Environment Config Files'

      - job: 'publish_adls_artifacts'
        displayName: 'Publish ADLS Artifacts'
        pool:
          vmImage: 'ubuntu-latest'
        steps:

          - task: AzureCLI@2
            inputs:
              azureSubscription: 'fabric-cicd-service-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                FABRIC_BEARER_TOKEN=$(az account get-access-token --resource https://api.fabric.microsoft.com --query accessToken -o tsv)

                echo "##vso[task.setvariable variable=FABRIC_BEARER_TOKEN]$FABRIC_BEARER_TOKEN"
              displayName: 'Get Fabric Bearer Token'

          - script: |
              chmod +x devops/scripts/build_adls_files.sh
              ./devops/scripts/build_adls_files.sh
            displayName: 'Create artifacts for ADLS'
            workingDirectory: $(Build.SourcesDirectory)

          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.SourcesDirectory)/adls/'
              ArtifactName: 'adls'
            displayName: 'Publish ADLS Artifacts'

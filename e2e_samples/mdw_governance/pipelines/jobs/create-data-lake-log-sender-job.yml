# This job creates the Azure Function that sends the Azure Data Lake logs to Log Analytics.
#
---
parameters:
  - name: environment
    type: string
  - name: resourceGroup
    type: string
  - name: location
    type: string
  - name: azureServiceConnection
    type: string
  - name: logSenderFunctionAppName
    type: string
  - name: dataLakeStorageAccountName
    type: string
  - name: targetLogAnalyticsWorkspaceName
    type: string
  - name: logAnalyticsWorkspaceName
    type: string
  - name: applicationInsightsName
    type: string
  - name: dependsOn
    type: object
    default: []

jobs:
  - deployment: DataLakeLogSender
    environment: ${{ parameters.environment }}
    dependsOn:
      - ${{ each depends in parameters.dependsOn }}:
          - ${{ depends }}
    pool:
      vmImage: ubuntu-latest
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: ArchiveFiles@2
              displayName: "Archive powershell function files"
              inputs:
                rootFolderOrFile: "$(Build.SourcesDirectory)/src/DataLakeLogsToLogAnalyticsFunction"
                includeRootFolder: false
                archiveFile: "$(Build.ArtifactStagingDirectory)/DataLakeLogsToLogAnalyticsFunction.zip"

            - template: ../templates/azure-function-datalakelogs.yml
              parameters:
                azureServiceConnection: ${{ parameters.azureServiceConnection }}
                resourceGroup: ${{ parameters.resourceGroup }}
                location: ${{ parameters.location }}
                functionAppName: ${{ parameters.logSenderFunctionAppName }}
                dataLakeAccountName: ${{ parameters.dataLakeStorageAccountName }}
                targetLogAnalyticsWorkspaceName: ${{ parameters.targetLogAnalyticsWorkspaceName }}
                logAnalyticsWorkspaceName: ${{ parameters.logAnalyticsWorkspaceName }}
                applicationInsightsName: ${{ parameters.applicationInsightsName }}
                diagnosticSettingName: setByPipeline

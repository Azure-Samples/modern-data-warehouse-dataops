{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "functionAppName": {
      "type": "string",
      "defaultValue": "srhddadllogsaf"
    },
    "location": {
      "type": "string",
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Location for all resources."
      }
    },
    "dataLakeAccountName": {
      "type": "string"
    },
    "targetLogAnalyticsWorkspaceName": {
      "type": "string",
      "metadata": {
        "description": "The name of Log Analytics Workspace to send the data lake logs to."
      }
    },
    "storageAccountType": {
      "type": "string",
      "allowedValues": [
        "Standard_LRS",
        "Standard_GRS",
        "Standard_RAGRS",
        "Standard_ZRS",
        "Premium_LRS",
        "Premium_ZRS",
        "Standard_GZRS",
        "Standard_RAGZRS"
      ],
      "defaultValue": "Standard_LRS",
      "metadata": {
        "description": "The Storage Account SKU type."
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the Application Insights instance."
      }
    },
    "logAnalyticsWorkspaceName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The name of Log Analytics Workspace for diagnostics of the function."
      }
    },
    "diagnosticSettingName": {
      "defaultValue": "",
      "type": "string"
    },
    "logsRetentionInDays": {
      "type": "int",
      "minValue": 0,
      "maxValue": 365,
      "metadata": {
        "description": "Optional. Specifies the number of days that function diagnostics logs will be kept for, a value of 0 will retain data indefinitely."
      }
    }
  },
  "variables": {
    "storageAccountName": "[toLower(concat(parameters('functionAppName'), 'sa'))]",
    "hostingPlanName": "[toLower(concat('appserviceplan-', parameters('functionAppName')))]",
    "diagnosticSettingName": "[concat(parameters('functionAppName'), '/Microsoft.Insights/', parameters('diagnosticSettingName'))]",
    "diagnosticWorkspaceResourceId": "[concat(resourceGroup().id, '/providers/Microsoft.OperationalInsights/workspaces/', parameters('logAnalyticsWorkspaceName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2019-06-01",
      "name": "[variables('storageAccountName')]",
      "location": "[parameters('location')]",
      "tags": {
        "program": "[parameters('functionAppName')]"
      },
      "sku": {
        "name": "[parameters('storageAccountType')]"
      },
      "kind": "Storage"
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2020-06-01",
      "name": "[variables('hostingPlanName')]",
      "location": "[parameters('location')]",
      "properties": {
        "name": "[variables('hostingPlanName')]"
      },
      "sku": {
        "name": "S2",
        "tier": "Standard",
        "capacity": 1
      },
      "tags": {
        "program": "[parameters('functionAppName')]"
      }
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2020-06-01",
      "name": "[parameters('functionAppName')]",
      "kind": "functionapp",
      "location": "[parameters('location')]",
      "tags": {
        "program": "[parameters('functionAppName')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]"
      ],
      "identity": {
        "type": "SystemAssigned"
      },
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
        "siteConfig": {
          "alwaysOn": true,
          "appSettings": [
            {
                "name": "AzureWebJobsStorage",
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('storageAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "powershell"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME_VERSION",
              "value": "~6"
            },           
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~3"
            },
            {
              "name": "APPINSIGHTS_INSTRUMENTATIONKEY",
              "value": "[reference(resourceId('microsoft.insights/components', parameters('applicationInsightsName')), '2020-02-02-preview').InstrumentationKey]"
            },
            {
              "name": "LOGANALYTICS_KEY",
              "value": "[listKeys(resourceId('microsoft.operationalinsights/workspaces', parameters('targetLogAnalyticsWorkspaceName')), '2015-11-01-preview').primarySharedKey]"
            },
            {
              "name": "LOGANALYTICS_WORKSPACEID",
              "value": "[reference(resourceId('microsoft.operationalinsights/workspaces', parameters('targetLogAnalyticsWorkspaceName')), '2015-11-01-preview').customerId]"
            },
            {
              "name": "RESOURCE_GROUP",
              "value": "[resourceGroup().name]"
            },
            {
              "name": "STORAGE_ACCOUNT_CONNECTION",
              "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('dataLakeAccountName'),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('dataLakeAccountName')), '2015-05-01-preview').key1)]"
            },
            {
              "name": "WEBSITE_RUN_FROM_PACKAGE",
              "value": "1"
            }
          ]
        }
      }
    },
    {
      "type": "Microsoft.Web/sites/providers/diagnosticsettings",
      "apiVersion": "2017-05-01-preview",
      "name": "[variables('diagnosticSettingName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ],
      "properties": {
        "workspaceId": "[variables('diagnosticWorkspaceResourceId')]",
        "logs": [
          {
            "category": "FunctionAppLogs",
              "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logsRetentionInDays')]"
            }
          }
        ],
        "metrics": [
          {
            "category": "AllMetrics",
            "enabled": true,
            "retentionPolicy": {
              "enabled": true,
              "days": "[parameters('logsRetentionInDays')]"
            }
          }
        ]
      }
    }
  ],
  "outputs": {
    "azureFunctionMsiObject": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2020-06-01', 'Full').identity.principalId]"
    },
    "azureFunctionName": {
      "type": "string",
      "value": "[parameters('functionAppName')]"
    }
  }
}

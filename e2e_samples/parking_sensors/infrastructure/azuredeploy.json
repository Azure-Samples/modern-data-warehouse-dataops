{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "deploy_namespace": {
            "defaultValue": "mdwdo",
            "type": "string"
        },
        "environment": {
            "defaultValue": "dev",
            "type": "string",
            "allowedValues": [
                "dev",
                "stg",
                "prod"
            ]
        },
        "deployment_id": {
            "defaultValue": "[substring(uniqueString(resourceGroup().id), 0, 5)]",
            "type": "String"
        },
        "databricks_workspace_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'dbricks', parameters('environment'), parameters('deployment_id'))]",
            "type": "String"
        },
        "keyvault_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'kv', parameters('environment'), parameters('deployment_id'))]",
            "type": "String",
            "metadata": {
                "description": "Key Vault Name"
            }
        },
        "keyvault_owner_object_id": {
            "type": "String",
            "metadata": {
                "description": "Active Directory ObjectId to be granted full rights to KV"
            }
        },
        "storage_account_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'stor', parameters('environment'), parameters('deployment_id'))]",
            "type": "String",
            "metadata": {
                "description": "Storage account - ADLA Gen2"
            }
        },
        "service_principal_storage_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'spstor', parameters('environment'), parameters('deployment_id'))]",
            "type": "String",
            "metadata": {
                "description": "Service Principal to be granted access to Storage Account - ADLA Gen2"
            }
        },
        "datafactory_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'adf', parameters('environment'), parameters('deployment_id'))]",
            "type": "string",
            "metadata": {
                "description": "Data Factory Name"
            }
        },
        "service_principal_datafactory_name": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'spadf', parameters('environment'), parameters('deployment_id'))]",
            "type": "String",
            "metadata": {
                "description": "Service Principal to be granted access to Data Factory"
            }
        },
        "sqlServerName": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'sqlsrvr', parameters('environment'), parameters('deployment_id'))]",
            "type": "string",
            "metadata": {
                "description": "SQL Server name"
            }
        },
        "sqlServerUsername": {
            "defaultValue": "sqlAdmin",
            "type": "string",
            "metadata": {
                "description": "SQL Server Username"
            }
        },
        "sqlServerPassword": {
            "type": "securestring",
            "metadata": {
                "description": "SQL Server Password"
            }
        },
        "sqlDwDatabaseName": {
            "defaultValue": "ddo_azuresqldw_dw",
            "type": "string",
            "metadata": {
                "description": "SQL Server Synapse Database name"
            }
        },
        "appinsightsName": {
            "defaultValue": "[concat(parameters('deploy_namespace'), 'appin', parameters('environment'), parameters('deployment_id'))]",
            "type": "string",
            "metadata": {
                "description": "Application Insights name"
            }
        }
    },
    "variables": {
        "managedResourceGroupId": "[concat(subscription().id, '/resourceGroups/', variables('managedResourceGroupName'))]",
        "managedResourceGroupName": "[concat('databricks-rg-', parameters('databricks_workspace_name'), '-', uniqueString(parameters('databricks_workspace_name'), resourceGroup().id))]"
    },
    "resources": [
        {
            "apiVersion": "2018-04-01",
            "location": "[resourceGroup().location]",
            "name": "[parameters('databricks_workspace_name')]",
            "tags": {
                "displayName": "Databricks Workspace",
                "Environment": "[parameters('environment')]"
            },
            "sku": {
                "name": "premium"
            },
            "properties": {
                "ManagedResourceGroupId": "[variables('managedResourceGroupId')]"
            },
            "type": "Microsoft.Databricks/workspaces"
        },
        {
            "type": "Microsoft.KeyVault/vaults",
            "name": "[parameters('keyvault_name')]",
            "apiVersion": "2015-06-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Key Vault",
                "Environment": "[parameters('environment')]"
            },
            "properties": {
                "enabledForDeployment": false,
                "enabledForTemplateDeployment": true,
                "enabledForVolumeEncryption": false,
                "tenantId": "[subscription().tenantId]",
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('keyvault_owner_object_id')]",
                        "permissions": {
                            "keys": [
                                "All"
                            ],
                            "secrets": [
                                "All"
                            ]
                        }
                    },
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[reference(parameters('datafactory_name'), '2018-06-01', 'Full').identity.principalId]",
                        "permissions": {
                            "secrets": [
                                "get",
                                "list"
                            ]
                        }
                    }
                ],
                "sku": {
                    "family": "A",
                    "name": "Standard"
                }
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "sku": {
                "name": "Standard_LRS",
                "tier": "Standard"
            },
            "kind": "StorageV2",
            "name": "[parameters('storage_account_name')]",
            "apiVersion": "2018-07-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Data Lake",
                "Environment": "[parameters('environment')]"
            },
            "scale": null,
            "properties": {
                "isHnsEnabled": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "virtualNetworkRules": [
                    ],
                    "ipRules": [
                    ],
                    "defaultAction": "Allow"
                },
                "supportsHttpsTrafficOnly": true,
                "encryption": {
                    "services": {
                        "file": {
                            "enabled": true
                        },
                        "blob": {
                            "enabled": true
                        }
                    },
                    "keySource": "Microsoft.Storage"
                },
                "accessTier": "Hot"
            },
            "dependsOn": [
            ]
        },
        {
            "apiVersion": "2018-06-01",
            "name": "[parameters('datafactory_name')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "DataFactory",
                "Environment": "[parameters('environment')]"
            },
            "type": "Microsoft.DataFactory/factories",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
            }
        },
        {
            "type": "Microsoft.Sql/servers",
            "apiVersion": "2019-06-01-preview",
            "name": "[parameters('sqlServerName')]",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "SQL Server",
                "Environment": "[parameters('environment')]"
            },
            "properties": {
                "administratorLogin": "[parameters('sqlServerUsername')]",
                "administratorLoginPassword": "[parameters('sqlServerPassword')]"
            },
            "resources": [
                {
                    "type": "databases",
                    "apiVersion": "2017-10-01-preview",
                    "name": "[parameters('sqlDwDatabaseName')]",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
                    ],
                    "tags": {
                        "displayName": "SQL DW",
                        "Environment": "[parameters('environment')]"
                    },
                    "sku": {
                        "name": "DataWarehouse",
                        "tier": "DataWarehouse",
                        "capacity": 900
                    },
                    "properties": {
                        "collation": "SQL_Latin1_General_CP1_CI_AS"
                    }
                },
                {
                    "type": "firewallrules",
                    "apiVersion": "2014-04-01-preview",
                    "name": "AllowAllWindowsAzureIps",
                    "location": "[resourceGroup().location]",
                    "dependsOn": [
                        "[concat('Microsoft.Sql/servers/', parameters('sqlServerName'))]"
                    ],
                    "properties": {
                        "endIpAddress": "0.0.0.0",
                        "startIpAddress": "0.0.0.0"
                    }
                }
            ]
        },
        {
            "name": "[parameters('appinsightsName')]",
            "type": "microsoft.insights/components",
            "location": "[resourceGroup().location]",
            "tags": {
                "displayName": "Application Insights",
                "Environment": "[parameters('environment')]"
            },
            "apiVersion": "2014-08-01",
            "properties": {}
        }
    ],
    "outputs": {
        "datafactory_name": {
            "value": "[parameters('datafactory_name')]",
            "type": "string"
        },
        "service_principal_datafactory_name": {
            "value": "[parameters('service_principal_datafactory_name')]",
            "type": "string"
        },
        "databricks_workspace_name": {
            "value": "[parameters('databricks_workspace_name')]",
            "type": "string"
        },
        "databricks_location": {
            "value": "[resourceGroup().location]",
            "type": "string"
        },
        "databricks_workspace_id": {
            "type": "string",
            "value": "[resourceId('Microsoft.Databricks/workspaces', parameters('databricks_workspace_name'))]"
        },
        "databricks_workspace": {
            "type": "object",
            "value": "[reference(resourceId('Microsoft.Databricks/workspaces', parameters('databricks_workspace_name')))]"
        },
        "keyvault_name": {
            "value": "[parameters('keyvault_name')]",
            "type": "string"
        },
        "storage_account_name": {
            "value": "[parameters('storage_account_name')]",
            "type": "string"
        },
        "service_principal_storage_name": {
            "value": "[parameters('service_principal_storage_name')]",
            "type": "string"
        },
        "sql_server_name": {
            "value": "[parameters('sqlServerName')]",
            "type": "string"
        },
        "sql_server_username": {
            "value": "[parameters('sqlServerUsername')]",
            "type": "string"
        },
        "sql_server_password": {
            "value": "[parameters('sqlServerPassword')]",
            "type": "string"
        },
        "sql_dw_database_name": {
            "value": "[parameters('sqlDwDatabaseName')]",
            "type": "string"
        },
        "appinsights_name": {
            "value": "[parameters('appinsightsName')]",
            "type": "string"
        }
    }
}
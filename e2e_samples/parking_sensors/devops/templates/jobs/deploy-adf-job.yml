parameters:
- name: environmentName
  type: string
- name: serviceConnection
  type: string

jobs:
- deployment: deploy_adf
  dependsOn: deploy_databricks
  displayName: 'Deploy to Azure Data Factory'
  pool:
    vmImage: 'windows-2019'
  variables:
    packageWheelName: $[ dependencies.deploy_databricks.outputs['deploy_databricks.setPackageWheelName.packageWheelName'] ]
  environment: ${{ parameters.environmentName }}
  strategy:
    runOnce:
      deploy:
        steps:
        - task: UseNode@1
  inputs:
    version: '18.x'
  displayName: 'Install Node.js'

        - task: Npm@1
          inputs:
            command: 'install'
            workingDir: '$(Pipeline.Workspace)/ciartifacts/adf' #replace with the package.json folder
            verbose: true
          displayName: 'Install npm package'

        # Validates all of the Data Factory resources in the repository. You'll get the same validation errors as when "Validate All" is selected.
        # Enter the appropriate subscription and name for the source factory. Either of the "Validate" or "Validate and Generate ARM temmplate" options are required to perform validation. Running both is unnecessary.

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(Pipeline.Workspace)/ciartifacts/adf' #replace with the package.json folder
            customCommand: 'run build validate $(Pipeline.Workspace)/ciartifacts/adf $(adfResourceId)'
          displayName: 'Validate'

        # Validate and then generate the ARM template into the destination folder, which is the same as selecting "Publish" from the UX.
        # The ARM template generated isn't published to the live version of the factory. Deployment should be done by using a CI/CD pipeline. 

        - task: Npm@1
          inputs:
            command: 'custom'
            workingDir: '$(Pipeline.Workspace)/ciartifacts/adf' #replace with the package.json folder
            customCommand: 'run build export $(Pipeline.Workspace)/ciartifacts/adf $(adfResourceId) "ArmTemplate"'
        #For using preview that allows you to only stop/ start triggers that are modified, please comment out the above line and uncomment the below line. Make sure the package.json contains the build-preview command. 
        #customCommand: 'run build-preview export $(Build.Repository.LocalPath) /subscriptions/aaaa0a0a-bb1b-cc2c-dd3d-eeeeee4e4e4e/resourceGroups/GartnerMQ2021/providers/Microsoft.DataFactory/factories/Dev-GartnerMQ2021-DataFactory "ArmTemplate"'
          displayName: 'Validate and Generate ARM template'

        # - checkout: mdwdataops_adfpublish
        #   path: 'adf_publish' 

        # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-powershell
        - task: AzurePowerShell@4
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            ScriptPath: '$(Pipeline.Workspace)/ciartifacts/adf/_scripts/deploymentadf.ps1'
            ScriptArguments: '-armTemplate "$(Pipeline.Workspace)\ciartifacts\adf\armtemplateARMTemplateForFactory.json" -ResourceGroupName "$(rgName)" -DataFactoryName "$(adfName)" -predeployment $true'
            azurePowerShellVersion: LatestVersion
          displayName: 'Azure PowerShell script: Stop ADF triggers'

        # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-resource-group-deployment
        - task: AzureResourceGroupDeployment@2
          displayName: 'Azure Deployment:Create Or Update Resource Group action on $(rgName)'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            resourceGroupName: '$(rgName)'
            location: '$(azureLocation)'
            csmFile: '$(Pipeline.Workspace)/adf_publish/$(devAdfName)/ARMTemplateForFactory.json'
            csmParametersFile: '$(Pipeline.Workspace)/adf_publish/$(devAdfName)/ARMTemplateParametersForFactory.json'
            overrideParameters: -factoryName "$(adfName)" -P_Ingest_MelbParkingData_properties_0_typeProperties_notebookPath "$(databricksNotebookPath)/02_standardize" -P_Ingest_MelbParkingData_properties_0_typeProperties_0_egg "$(databricksDbfsLibPath)/$(packageWheelName)" -P_Ingest_MelbParkingData_properties_4_typeProperties_0_egg "$(databricksDbfsLibPath)/$(packageWheelName)" -Ls_AdlsGen2_01_properties_typeProperties_url "https://$(datalakeAccountName).dfs.core.windows.net/" -Ls_KeyVault_01_properties_typeProperties_baseUrl "$(kvUrl)" -Ls_Rest_MelParkSensors_01_properties_typeProperties_url "$(apiBaseUrl)" -P_Ingest_MelbParkingData_properties_4_typeProperties_notebookPath "$(databricksNotebookPath)/03_transform" -Ls_AzureDatabricks_01_properties_typeProperties_domain "$(databricksDomain)" -Ls_AzureDatabricks_01_properties_typeProperties_workspaceResourceId "$(databricksWorkspaceResourceId)"


        # https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/deploy/azure-powershell
        - task: AzurePowerShell@4
          displayName: 'Azure PowerShell script: Start ADF triggers'
          inputs:
            azureSubscription: ${{ parameters.serviceConnection }}
            ScriptPath: '$(Pipeline.Workspace)/ciartifacts/adf_scripts/deploymentadf.ps1'
            ScriptArguments: '-armTemplate "$(Pipeline.Workspace)\adf_publish\$(devAdfName)\ARMTemplateForFactory.json" -ResourceGroupName "$(rgName)" -DataFactoryName "$(adfName)" -predeployment $false'
            azurePowerShellVersion: LatestVersion